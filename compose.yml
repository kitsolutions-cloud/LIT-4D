services:
  email-provider:
    build:
      context: ./email-provider
    env_file:
      - ./email-provider/.env
    restart: unless-stopped
    ports:
      - '1080:1080'

  oauth-provider:
    build:
      context: ./oauth-provider
    env_file:
      - ./oauth-provider/.env
    restart: unless-stopped
    ports:
      - '8180:8180'
    volumes:
      - ./oauth-provider/providers:/opt/keycloak/providers
      - ./oauth-provider/helms:/opt/keycloak/data/import
    depends_on:
      sqldb-provider:
        condition: service_started

  sqldb-provider:
    build:
      context: ./sqldb-provider
    env_file:
      - ./sqldb-provider/.env
    restart: unless-stopped
    volumes:
      - ./sqldb-provider/.data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  sqldbmngr_provider:
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    image: adminer
    restart: unless-stopped
    ports:
      - '5433:8080'

  aws-services-provider:
    build:
      context: ./aws-services-provider
    env_file:
      - ./aws-services-provider/.env
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - ./aws-services-provider/ready.d/:/etc/localstack/init/ready.d/

  mongodb-provider:
    build:
      context: ./mongodb-provider
    env_file:
      - ./mongodb-provider/.env
    restart: unless-stopped
    volumes:
      - ./mongodb-provider/.data/db:/data/db

  feature-flag-provider:
    build:
      context: ./feature-flag-provider
    env_file:
      - ./feature-flag-provider/.env
    restart: unless-stopped
    volumes:
      - ./feature-flag-provider/.data/uploads:/usr/local/src/app/packages/back-end/uploads

services:
  email_provider:
    build:
      context: ./email_provider
    env_file:
      - ./email_provider/.env
    restart: unless-stopped
    ports:
      - '1080:1080'

  oauth_provider:
    build:
      context: ./oauth_provider
    env_file:
      - ./oauth_provider/.env
    restart: unless-stopped
    ports:
      - '8180:8180'
    depends_on:
      sqldb_provider:
        condition: service_started

  sqldb_provider:
    build:
      context: ./sqldb_provider
    env_file:
      - ./sqldb_provider/.env
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  sqldbmngr_provider:
    image: chat2db/chat2db
    env_file:
      - ./sqldb_provider/.env
    restart: unless-stopped
    ports:
      - '5433:10824'

  aws_services_provider:
    build:
      context: ./aws_services_provider
    env_file:
      - ./aws_services_provider/.env
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - ./aws_services_provider/ready.d/:/etc/localstack/init/ready.d/
